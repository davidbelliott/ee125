-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--t[15] is t[15]
--register power-up is low

t[15] = DFFEAS(A1L2, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[14] is t[14]
--register power-up is low

t[14] = DFFEAS(A1L6, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[9] is t[9]
--register power-up is low

t[9] = DFFEAS(A1L10, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[5] is t[5]
--register power-up is low

t[5] = DFFEAS(A1L14, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[1] is t[1]
--register power-up is low

t[1] = DFFEAS(A1L18, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[4] is t[4]
--register power-up is low

t[4] = DFFEAS(A1L22, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[3] is t[3]
--register power-up is low

t[3] = DFFEAS(A1L26, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[0] is t[0]
--register power-up is low

t[0] = DFFEAS(A1L30, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[2] is t[2]
--register power-up is low

t[2] = DFFEAS(A1L34, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[6] is t[6]
--register power-up is low

t[6] = DFFEAS(A1L38, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[8] is t[8]
--register power-up is low

t[8] = DFFEAS(A1L42, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[7] is t[7]
--register power-up is low

t[7] = DFFEAS(A1L46, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[13] is t[13]
--register power-up is low

t[13] = DFFEAS(A1L50, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[12] is t[12]
--register power-up is low

t[12] = DFFEAS(A1L54, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[10] is t[10]
--register power-up is low

t[10] = DFFEAS(A1L58, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[11] is t[11]
--register power-up is low

t[11] = DFFEAS(A1L62, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[16] is t[16]
--register power-up is low

t[16] = DFFEAS(A1L66, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[18] is t[18]
--register power-up is low

t[18] = DFFEAS(A1L70, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[19] is t[19]
--register power-up is low

t[19] = DFFEAS(A1L74, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[17] is t[17]
--register power-up is low

t[17] = DFFEAS(A1L78, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[21] is t[21]
--register power-up is low

t[21] = DFFEAS(A1L82, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[22] is t[22]
--register power-up is low

t[22] = DFFEAS(A1L86, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[20] is t[20]
--register power-up is low

t[20] = DFFEAS(A1L90, clk, rst,  , A1L504,  ,  , WideOr0,  );


--t[23] is t[23]
--register power-up is low

t[23] = DFFEAS(A1L94, clk, rst,  , A1L504,  ,  , WideOr0,  );


--A1L226 is Add2~1
A1L226_adder_eqn = ( GND ) + ( GND ) + ( A1L327 );
A1L226 = SUM(A1L226_adder_eqn);


--A1L230 is Add2~5
A1L230_adder_eqn = ( T1[16] ) + ( VCC ) + ( A1L243 );
A1L230 = SUM(A1L230_adder_eqn);

--A1L231 is Add2~6
A1L231_adder_eqn = ( T1[16] ) + ( VCC ) + ( A1L243 );
A1L231 = CARRY(A1L231_adder_eqn);


--A1L234 is Add2~9
A1L234_adder_eqn = ( !T1[14] ) + ( VCC ) + ( A1L231 );
A1L234 = SUM(A1L234_adder_eqn);

--A1L235 is Add2~10
A1L235_adder_eqn = ( !T1[14] ) + ( VCC ) + ( A1L231 );
A1L235 = CARRY(A1L235_adder_eqn);


--A1L238 is Add2~13
A1L238_adder_eqn = ( !T1[18] ) + ( VCC ) + ( A1L235 );
A1L238 = SUM(A1L238_adder_eqn);

--A1L239 is Add2~14
A1L239_adder_eqn = ( !T1[18] ) + ( VCC ) + ( A1L235 );
A1L239 = CARRY(A1L239_adder_eqn);


--A1L242 is Add2~17
A1L242_adder_eqn = ( !T1[15] ) + ( VCC ) + ( A1L279 );
A1L242 = SUM(A1L242_adder_eqn);

--A1L243 is Add2~18
A1L243_adder_eqn = ( !T1[15] ) + ( VCC ) + ( A1L279 );
A1L243 = CARRY(A1L243_adder_eqn);


--A1L246 is Add2~21
A1L246_adder_eqn = ( T1[14] ) + ( VCC ) + ( A1L331 );
A1L246 = SUM(A1L246_adder_eqn);

--A1L247 is Add2~22
A1L247_adder_eqn = ( T1[14] ) + ( VCC ) + ( A1L331 );
A1L247 = CARRY(A1L247_adder_eqn);


--A1L250 is Add2~25
A1L250_adder_eqn = ( T1[7] ) + ( VCC ) + ( A1L247 );
A1L250 = SUM(A1L250_adder_eqn);

--A1L251 is Add2~26
A1L251_adder_eqn = ( T1[7] ) + ( VCC ) + ( A1L247 );
A1L251 = CARRY(A1L251_adder_eqn);


--A1L254 is Add2~29
A1L254_adder_eqn = ( T1[8] ) + ( VCC ) + ( A1L251 );
A1L254 = SUM(A1L254_adder_eqn);

--A1L255 is Add2~30
A1L255_adder_eqn = ( T1[8] ) + ( VCC ) + ( A1L251 );
A1L255 = CARRY(A1L255_adder_eqn);


--A1L258 is Add2~33
A1L258_adder_eqn = ( T1[9] ) + ( VCC ) + ( A1L255 );
A1L258 = SUM(A1L258_adder_eqn);

--A1L259 is Add2~34
A1L259_adder_eqn = ( T1[9] ) + ( VCC ) + ( A1L255 );
A1L259 = CARRY(A1L259_adder_eqn);


--A1L262 is Add2~37
A1L262_adder_eqn = ( !T1[10] ) + ( VCC ) + ( A1L259 );
A1L262 = SUM(A1L262_adder_eqn);

--A1L263 is Add2~38
A1L263_adder_eqn = ( !T1[10] ) + ( VCC ) + ( A1L259 );
A1L263 = CARRY(A1L263_adder_eqn);


--A1L266 is Add2~41
A1L266_adder_eqn = ( !T1[11] ) + ( VCC ) + ( A1L263 );
A1L266 = SUM(A1L266_adder_eqn);

--A1L267 is Add2~42
A1L267_adder_eqn = ( !T1[11] ) + ( VCC ) + ( A1L263 );
A1L267 = CARRY(A1L267_adder_eqn);


--A1L270 is Add2~45
A1L270_adder_eqn = ( !T1[23] ) + ( VCC ) + ( A1L267 );
A1L270 = SUM(A1L270_adder_eqn);

--A1L271 is Add2~46
A1L271_adder_eqn = ( !T1[23] ) + ( VCC ) + ( A1L267 );
A1L271 = CARRY(A1L271_adder_eqn);


--A1L274 is Add2~49
A1L274_adder_eqn = ( !T1[21] ) + ( VCC ) + ( A1L271 );
A1L274 = SUM(A1L274_adder_eqn);

--A1L275 is Add2~50
A1L275_adder_eqn = ( !T1[21] ) + ( VCC ) + ( A1L271 );
A1L275 = CARRY(A1L275_adder_eqn);


--A1L278 is Add2~53
A1L278_adder_eqn = ( T1[14] ) + ( VCC ) + ( A1L275 );
A1L278 = SUM(A1L278_adder_eqn);

--A1L279 is Add2~54
A1L279_adder_eqn = ( T1[14] ) + ( VCC ) + ( A1L275 );
A1L279 = CARRY(A1L279_adder_eqn);


--A1L282 is Add2~57
A1L282_adder_eqn = ( !T1[19] ) + ( VCC ) + ( A1L239 );
A1L282 = SUM(A1L282_adder_eqn);

--A1L283 is Add2~58
A1L283_adder_eqn = ( !T1[19] ) + ( VCC ) + ( A1L239 );
A1L283 = CARRY(A1L283_adder_eqn);


--A1L286 is Add2~61
A1L286_adder_eqn = ( !T1[20] ) + ( VCC ) + ( A1L283 );
A1L286 = SUM(A1L286_adder_eqn);

--A1L287 is Add2~62
A1L287_adder_eqn = ( !T1[20] ) + ( VCC ) + ( A1L283 );
A1L287 = CARRY(A1L287_adder_eqn);


--A1L290 is Add2~65
A1L290_adder_eqn = ( !T1[21] ) + ( VCC ) + ( A1L287 );
A1L290 = SUM(A1L290_adder_eqn);

--A1L291 is Add2~66
A1L291_adder_eqn = ( !T1[21] ) + ( VCC ) + ( A1L287 );
A1L291 = CARRY(A1L291_adder_eqn);


--A1L294 is Add2~69
A1L294_adder_eqn = ( T1[22] ) + ( VCC ) + ( A1L291 );
A1L294 = SUM(A1L294_adder_eqn);

--A1L295 is Add2~70
A1L295_adder_eqn = ( T1[22] ) + ( VCC ) + ( A1L291 );
A1L295 = CARRY(A1L295_adder_eqn);


--A1L298 is Add2~73
A1L298_adder_eqn = ( !T1[23] ) + ( VCC ) + ( A1L295 );
A1L298 = SUM(A1L298_adder_eqn);

--A1L299 is Add2~74
A1L299_adder_eqn = ( !T1[23] ) + ( VCC ) + ( A1L295 );
A1L299 = CARRY(A1L299_adder_eqn);


--A1L302 is Add2~77
A1L302_adder_eqn = ( VCC ) + ( GND ) + ( A1L307 );
A1L302 = SUM(A1L302_adder_eqn);

--A1L303 is Add2~78
A1L303_adder_eqn = ( VCC ) + ( GND ) + ( A1L307 );
A1L303 = CARRY(A1L303_adder_eqn);


--A1L306 is Add2~81
A1L306_adder_eqn = ( VCC ) + ( GND ) + ( A1L311 );
A1L306 = SUM(A1L306_adder_eqn);

--A1L307 is Add2~82
A1L307_adder_eqn = ( VCC ) + ( GND ) + ( A1L311 );
A1L307 = CARRY(A1L307_adder_eqn);


--A1L310 is Add2~85
A1L310_adder_eqn = ( VCC ) + ( GND ) + ( A1L315 );
A1L310 = SUM(A1L310_adder_eqn);

--A1L311 is Add2~86
A1L311_adder_eqn = ( VCC ) + ( GND ) + ( A1L315 );
A1L311 = CARRY(A1L311_adder_eqn);


--A1L314 is Add2~89
A1L314_adder_eqn = ( VCC ) + ( GND ) + ( A1L323 );
A1L314 = SUM(A1L314_adder_eqn);

--A1L315 is Add2~90
A1L315_adder_eqn = ( VCC ) + ( GND ) + ( A1L323 );
A1L315 = CARRY(A1L315_adder_eqn);


--A1L318 is Add2~93
A1L318_adder_eqn = ( VCC ) + ( GND ) + ( A1L299 );
A1L318 = SUM(A1L318_adder_eqn);

--A1L319 is Add2~94
A1L319_adder_eqn = ( VCC ) + ( GND ) + ( A1L299 );
A1L319 = CARRY(A1L319_adder_eqn);


--A1L322 is Add2~97
A1L322_adder_eqn = ( VCC ) + ( GND ) + ( A1L319 );
A1L322 = SUM(A1L322_adder_eqn);

--A1L323 is Add2~98
A1L323_adder_eqn = ( VCC ) + ( GND ) + ( A1L319 );
A1L323 = CARRY(A1L323_adder_eqn);


--A1L326 is Add2~101
A1L326_adder_eqn = ( VCC ) + ( GND ) + ( A1L303 );
A1L326 = SUM(A1L326_adder_eqn);

--A1L327 is Add2~102
A1L327_adder_eqn = ( VCC ) + ( GND ) + ( A1L303 );
A1L327 = CARRY(A1L327_adder_eqn);


--A1L2 is Add0~1
A1L2_adder_eqn = ( t[15] ) + ( GND ) + ( A1L7 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2
A1L3_adder_eqn = ( t[15] ) + ( GND ) + ( A1L7 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( t[14] ) + ( GND ) + ( A1L51 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6
A1L7_adder_eqn = ( t[14] ) + ( GND ) + ( A1L51 );
A1L7 = CARRY(A1L7_adder_eqn);


--A1L10 is Add0~9
A1L10_adder_eqn = ( t[9] ) + ( GND ) + ( A1L43 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( t[9] ) + ( GND ) + ( A1L43 );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L14 is Add0~13
A1L14_adder_eqn = ( t[5] ) + ( GND ) + ( A1L23 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( t[5] ) + ( GND ) + ( A1L23 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L18 is Add0~17
A1L18_adder_eqn = ( t[1] ) + ( GND ) + ( A1L31 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( t[1] ) + ( GND ) + ( A1L31 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L22 is Add0~21
A1L22_adder_eqn = ( t[4] ) + ( GND ) + ( A1L27 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( t[4] ) + ( GND ) + ( A1L27 );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L26 is Add0~25
A1L26_adder_eqn = ( t[3] ) + ( GND ) + ( A1L35 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( t[3] ) + ( GND ) + ( A1L35 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L30 is Add0~29
A1L30_adder_eqn = ( t[0] ) + ( VCC ) + ( !VCC );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( t[0] ) + ( VCC ) + ( !VCC );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L34 is Add0~33
A1L34_adder_eqn = ( t[2] ) + ( GND ) + ( A1L19 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( t[2] ) + ( GND ) + ( A1L19 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L38 is Add0~37
A1L38_adder_eqn = ( t[6] ) + ( GND ) + ( A1L15 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( t[6] ) + ( GND ) + ( A1L15 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L42 is Add0~41
A1L42_adder_eqn = ( t[8] ) + ( GND ) + ( A1L47 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42
A1L43_adder_eqn = ( t[8] ) + ( GND ) + ( A1L47 );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L46 is Add0~45
A1L46_adder_eqn = ( t[7] ) + ( GND ) + ( A1L39 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46
A1L47_adder_eqn = ( t[7] ) + ( GND ) + ( A1L39 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L50 is Add0~49
A1L50_adder_eqn = ( t[13] ) + ( GND ) + ( A1L55 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50
A1L51_adder_eqn = ( t[13] ) + ( GND ) + ( A1L55 );
A1L51 = CARRY(A1L51_adder_eqn);


--A1L54 is Add0~53
A1L54_adder_eqn = ( t[12] ) + ( GND ) + ( A1L63 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54
A1L55_adder_eqn = ( t[12] ) + ( GND ) + ( A1L63 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L58 is Add0~57
A1L58_adder_eqn = ( t[10] ) + ( GND ) + ( A1L11 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58
A1L59_adder_eqn = ( t[10] ) + ( GND ) + ( A1L11 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L62 is Add0~61
A1L62_adder_eqn = ( t[11] ) + ( GND ) + ( A1L59 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62
A1L63_adder_eqn = ( t[11] ) + ( GND ) + ( A1L59 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L66 is Add0~65
A1L66_adder_eqn = ( t[16] ) + ( GND ) + ( A1L3 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66
A1L67_adder_eqn = ( t[16] ) + ( GND ) + ( A1L3 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L70 is Add0~69
A1L70_adder_eqn = ( t[18] ) + ( GND ) + ( A1L79 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70
A1L71_adder_eqn = ( t[18] ) + ( GND ) + ( A1L79 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L74 is Add0~73
A1L74_adder_eqn = ( t[19] ) + ( GND ) + ( A1L71 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74
A1L75_adder_eqn = ( t[19] ) + ( GND ) + ( A1L71 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L78 is Add0~77
A1L78_adder_eqn = ( t[17] ) + ( GND ) + ( A1L67 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78
A1L79_adder_eqn = ( t[17] ) + ( GND ) + ( A1L67 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L82 is Add0~81
A1L82_adder_eqn = ( t[21] ) + ( GND ) + ( A1L91 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82
A1L83_adder_eqn = ( t[21] ) + ( GND ) + ( A1L91 );
A1L83 = CARRY(A1L83_adder_eqn);


--A1L86 is Add0~85
A1L86_adder_eqn = ( t[22] ) + ( GND ) + ( A1L83 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86
A1L87_adder_eqn = ( t[22] ) + ( GND ) + ( A1L83 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L90 is Add0~89
A1L90_adder_eqn = ( t[20] ) + ( GND ) + ( A1L75 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add0~90
A1L91_adder_eqn = ( t[20] ) + ( GND ) + ( A1L75 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L94 is Add0~93
A1L94_adder_eqn = ( t[23] ) + ( GND ) + ( A1L87 );
A1L94 = SUM(A1L94_adder_eqn);


--A1L331 is Add2~106
A1L331_adder_eqn = ( !T1[21] ) + ( VCC ) + ( !VCC );
A1L331 = CARRY(A1L331_adder_eqn);


--T1_index[0] is T1_index[0]
--register power-up is low

T1_index[0] = DFFEAS(A1L98, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[2] is T1_index[2]
--register power-up is low

T1_index[2] = DFFEAS(A1L102, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[1] is T1_index[1]
--register power-up is low

T1_index[1] = DFFEAS(A1L106, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--A1L98 is Add1~1
A1L98_adder_eqn = ( T1_index[0] ) + ( VCC ) + ( !VCC );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add1~2
A1L99_adder_eqn = ( T1_index[0] ) + ( VCC ) + ( !VCC );
A1L99 = CARRY(A1L99_adder_eqn);


--T1_index[30] is T1_index[30]
--register power-up is low

T1_index[30] = DFFEAS(A1L110, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[29] is T1_index[29]
--register power-up is low

T1_index[29] = DFFEAS(A1L114, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[31] is T1_index[31]
--register power-up is low

T1_index[31] = DFFEAS(A1L118, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[4] is T1_index[4]
--register power-up is low

T1_index[4] = DFFEAS(A1L122, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[28] is T1_index[28]
--register power-up is low

T1_index[28] = DFFEAS(A1L126, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[5] is T1_index[5]
--register power-up is low

T1_index[5] = DFFEAS(A1L130, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[6] is T1_index[6]
--register power-up is low

T1_index[6] = DFFEAS(A1L134, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[7] is T1_index[7]
--register power-up is low

T1_index[7] = DFFEAS(A1L138, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[8] is T1_index[8]
--register power-up is low

T1_index[8] = DFFEAS(A1L142, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[10] is T1_index[10]
--register power-up is low

T1_index[10] = DFFEAS(A1L146, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[9] is T1_index[9]
--register power-up is low

T1_index[9] = DFFEAS(A1L150, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[11] is T1_index[11]
--register power-up is low

T1_index[11] = DFFEAS(A1L154, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[12] is T1_index[12]
--register power-up is low

T1_index[12] = DFFEAS(A1L158, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[13] is T1_index[13]
--register power-up is low

T1_index[13] = DFFEAS(A1L162, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[14] is T1_index[14]
--register power-up is low

T1_index[14] = DFFEAS(A1L166, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[16] is T1_index[16]
--register power-up is low

T1_index[16] = DFFEAS(A1L170, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[15] is T1_index[15]
--register power-up is low

T1_index[15] = DFFEAS(A1L174, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[23] is T1_index[23]
--register power-up is low

T1_index[23] = DFFEAS(A1L178, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[24] is T1_index[24]
--register power-up is low

T1_index[24] = DFFEAS(A1L182, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[25] is T1_index[25]
--register power-up is low

T1_index[25] = DFFEAS(A1L186, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[26] is T1_index[26]
--register power-up is low

T1_index[26] = DFFEAS(A1L190, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[3] is T1_index[3]
--register power-up is low

T1_index[3] = DFFEAS(A1L194, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[27] is T1_index[27]
--register power-up is low

T1_index[27] = DFFEAS(A1L198, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[17] is T1_index[17]
--register power-up is low

T1_index[17] = DFFEAS(A1L202, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[18] is T1_index[18]
--register power-up is low

T1_index[18] = DFFEAS(A1L206, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[19] is T1_index[19]
--register power-up is low

T1_index[19] = DFFEAS(A1L210, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[20] is T1_index[20]
--register power-up is low

T1_index[20] = DFFEAS(A1L214, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[22] is T1_index[22]
--register power-up is low

T1_index[22] = DFFEAS(A1L218, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--T1_index[21] is T1_index[21]
--register power-up is low

T1_index[21] = DFFEAS(A1L222, !B1_y,  ,  ,  ,  ,  , A1L341,  );


--B1_t[5] is switch_debouncer:debouncer|t[5]
--register power-up is low

B1_t[5] = DFFEAS(B1L2, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[12] is switch_debouncer:debouncer|t[12]
--register power-up is low

B1_t[12] = DFFEAS(B1L6, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[6] is switch_debouncer:debouncer|t[6]
--register power-up is low

B1_t[6] = DFFEAS(B1L10, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[7] is switch_debouncer:debouncer|t[7]
--register power-up is low

B1_t[7] = DFFEAS(B1L14, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[8] is switch_debouncer:debouncer|t[8]
--register power-up is low

B1_t[8] = DFFEAS(B1L18, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[9] is switch_debouncer:debouncer|t[9]
--register power-up is low

B1_t[9] = DFFEAS(B1L22, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[11] is switch_debouncer:debouncer|t[11]
--register power-up is low

B1_t[11] = DFFEAS(B1L26, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[10] is switch_debouncer:debouncer|t[10]
--register power-up is low

B1_t[10] = DFFEAS(B1L30, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[19] is switch_debouncer:debouncer|t[19]
--register power-up is low

B1_t[19] = DFFEAS(B1L34, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[2] is switch_debouncer:debouncer|t[2]
--register power-up is low

B1_t[2] = DFFEAS(B1L38, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[1] is switch_debouncer:debouncer|t[1]
--register power-up is low

B1_t[1] = DFFEAS(B1L42, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[0] is switch_debouncer:debouncer|t[0]
--register power-up is low

B1_t[0] = DFFEAS(B1L46, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[4] is switch_debouncer:debouncer|t[4]
--register power-up is low

B1_t[4] = DFFEAS(B1L50, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[3] is switch_debouncer:debouncer|t[3]
--register power-up is low

B1_t[3] = DFFEAS(B1L54, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[13] is switch_debouncer:debouncer|t[13]
--register power-up is low

B1_t[13] = DFFEAS(B1L58, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[14] is switch_debouncer:debouncer|t[14]
--register power-up is low

B1_t[14] = DFFEAS(B1L62, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[15] is switch_debouncer:debouncer|t[15]
--register power-up is low

B1_t[15] = DFFEAS(B1L66, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[16] is switch_debouncer:debouncer|t[16]
--register power-up is low

B1_t[16] = DFFEAS(B1L70, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[18] is switch_debouncer:debouncer|t[18]
--register power-up is low

B1_t[18] = DFFEAS(B1L74, clk,  ,  ,  ,  ,  , B1L85,  );


--B1_t[17] is switch_debouncer:debouncer|t[17]
--register power-up is low

B1_t[17] = DFFEAS(B1L78, clk,  ,  ,  ,  ,  , B1L85,  );


--A1L102 is Add1~5
A1L102_adder_eqn = ( T1_index[2] ) + ( GND ) + ( A1L107 );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add1~6
A1L103_adder_eqn = ( T1_index[2] ) + ( GND ) + ( A1L107 );
A1L103 = CARRY(A1L103_adder_eqn);


--A1L106 is Add1~9
A1L106_adder_eqn = ( T1_index[1] ) + ( GND ) + ( A1L99 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add1~10
A1L107_adder_eqn = ( T1_index[1] ) + ( GND ) + ( A1L99 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L110 is Add1~13
A1L110_adder_eqn = ( T1_index[30] ) + ( GND ) + ( A1L115 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add1~14
A1L111_adder_eqn = ( T1_index[30] ) + ( GND ) + ( A1L115 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L114 is Add1~17
A1L114_adder_eqn = ( T1_index[29] ) + ( GND ) + ( A1L127 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add1~18
A1L115_adder_eqn = ( T1_index[29] ) + ( GND ) + ( A1L127 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L118 is Add1~21
A1L118_adder_eqn = ( T1_index[31] ) + ( GND ) + ( A1L111 );
A1L118 = SUM(A1L118_adder_eqn);


--A1L122 is Add1~25
A1L122_adder_eqn = ( T1_index[4] ) + ( GND ) + ( A1L195 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add1~26
A1L123_adder_eqn = ( T1_index[4] ) + ( GND ) + ( A1L195 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L126 is Add1~29
A1L126_adder_eqn = ( T1_index[28] ) + ( GND ) + ( A1L199 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add1~30
A1L127_adder_eqn = ( T1_index[28] ) + ( GND ) + ( A1L199 );
A1L127 = CARRY(A1L127_adder_eqn);


--A1L130 is Add1~33
A1L130_adder_eqn = ( T1_index[5] ) + ( GND ) + ( A1L123 );
A1L130 = SUM(A1L130_adder_eqn);

--A1L131 is Add1~34
A1L131_adder_eqn = ( T1_index[5] ) + ( GND ) + ( A1L123 );
A1L131 = CARRY(A1L131_adder_eqn);


--A1L134 is Add1~37
A1L134_adder_eqn = ( T1_index[6] ) + ( GND ) + ( A1L131 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add1~38
A1L135_adder_eqn = ( T1_index[6] ) + ( GND ) + ( A1L131 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L138 is Add1~41
A1L138_adder_eqn = ( T1_index[7] ) + ( GND ) + ( A1L135 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add1~42
A1L139_adder_eqn = ( T1_index[7] ) + ( GND ) + ( A1L135 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L142 is Add1~45
A1L142_adder_eqn = ( T1_index[8] ) + ( GND ) + ( A1L139 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add1~46
A1L143_adder_eqn = ( T1_index[8] ) + ( GND ) + ( A1L139 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L146 is Add1~49
A1L146_adder_eqn = ( T1_index[10] ) + ( GND ) + ( A1L151 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add1~50
A1L147_adder_eqn = ( T1_index[10] ) + ( GND ) + ( A1L151 );
A1L147 = CARRY(A1L147_adder_eqn);


--A1L150 is Add1~53
A1L150_adder_eqn = ( T1_index[9] ) + ( GND ) + ( A1L143 );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add1~54
A1L151_adder_eqn = ( T1_index[9] ) + ( GND ) + ( A1L143 );
A1L151 = CARRY(A1L151_adder_eqn);


--A1L154 is Add1~57
A1L154_adder_eqn = ( T1_index[11] ) + ( GND ) + ( A1L147 );
A1L154 = SUM(A1L154_adder_eqn);

--A1L155 is Add1~58
A1L155_adder_eqn = ( T1_index[11] ) + ( GND ) + ( A1L147 );
A1L155 = CARRY(A1L155_adder_eqn);


--A1L158 is Add1~61
A1L158_adder_eqn = ( T1_index[12] ) + ( GND ) + ( A1L155 );
A1L158 = SUM(A1L158_adder_eqn);

--A1L159 is Add1~62
A1L159_adder_eqn = ( T1_index[12] ) + ( GND ) + ( A1L155 );
A1L159 = CARRY(A1L159_adder_eqn);


--A1L162 is Add1~65
A1L162_adder_eqn = ( T1_index[13] ) + ( GND ) + ( A1L159 );
A1L162 = SUM(A1L162_adder_eqn);

--A1L163 is Add1~66
A1L163_adder_eqn = ( T1_index[13] ) + ( GND ) + ( A1L159 );
A1L163 = CARRY(A1L163_adder_eqn);


--A1L166 is Add1~69
A1L166_adder_eqn = ( T1_index[14] ) + ( GND ) + ( A1L163 );
A1L166 = SUM(A1L166_adder_eqn);

--A1L167 is Add1~70
A1L167_adder_eqn = ( T1_index[14] ) + ( GND ) + ( A1L163 );
A1L167 = CARRY(A1L167_adder_eqn);


--A1L170 is Add1~73
A1L170_adder_eqn = ( T1_index[16] ) + ( GND ) + ( A1L175 );
A1L170 = SUM(A1L170_adder_eqn);

--A1L171 is Add1~74
A1L171_adder_eqn = ( T1_index[16] ) + ( GND ) + ( A1L175 );
A1L171 = CARRY(A1L171_adder_eqn);


--A1L174 is Add1~77
A1L174_adder_eqn = ( T1_index[15] ) + ( GND ) + ( A1L167 );
A1L174 = SUM(A1L174_adder_eqn);

--A1L175 is Add1~78
A1L175_adder_eqn = ( T1_index[15] ) + ( GND ) + ( A1L167 );
A1L175 = CARRY(A1L175_adder_eqn);


--A1L178 is Add1~81
A1L178_adder_eqn = ( T1_index[23] ) + ( GND ) + ( A1L219 );
A1L178 = SUM(A1L178_adder_eqn);

--A1L179 is Add1~82
A1L179_adder_eqn = ( T1_index[23] ) + ( GND ) + ( A1L219 );
A1L179 = CARRY(A1L179_adder_eqn);


--A1L182 is Add1~85
A1L182_adder_eqn = ( T1_index[24] ) + ( GND ) + ( A1L179 );
A1L182 = SUM(A1L182_adder_eqn);

--A1L183 is Add1~86
A1L183_adder_eqn = ( T1_index[24] ) + ( GND ) + ( A1L179 );
A1L183 = CARRY(A1L183_adder_eqn);


--A1L186 is Add1~89
A1L186_adder_eqn = ( T1_index[25] ) + ( GND ) + ( A1L183 );
A1L186 = SUM(A1L186_adder_eqn);

--A1L187 is Add1~90
A1L187_adder_eqn = ( T1_index[25] ) + ( GND ) + ( A1L183 );
A1L187 = CARRY(A1L187_adder_eqn);


--A1L190 is Add1~93
A1L190_adder_eqn = ( T1_index[26] ) + ( GND ) + ( A1L187 );
A1L190 = SUM(A1L190_adder_eqn);

--A1L191 is Add1~94
A1L191_adder_eqn = ( T1_index[26] ) + ( GND ) + ( A1L187 );
A1L191 = CARRY(A1L191_adder_eqn);


--A1L194 is Add1~97
A1L194_adder_eqn = ( T1_index[3] ) + ( GND ) + ( A1L103 );
A1L194 = SUM(A1L194_adder_eqn);

--A1L195 is Add1~98
A1L195_adder_eqn = ( T1_index[3] ) + ( GND ) + ( A1L103 );
A1L195 = CARRY(A1L195_adder_eqn);


--A1L198 is Add1~101
A1L198_adder_eqn = ( T1_index[27] ) + ( GND ) + ( A1L191 );
A1L198 = SUM(A1L198_adder_eqn);

--A1L199 is Add1~102
A1L199_adder_eqn = ( T1_index[27] ) + ( GND ) + ( A1L191 );
A1L199 = CARRY(A1L199_adder_eqn);


--A1L202 is Add1~105
A1L202_adder_eqn = ( T1_index[17] ) + ( GND ) + ( A1L171 );
A1L202 = SUM(A1L202_adder_eqn);

--A1L203 is Add1~106
A1L203_adder_eqn = ( T1_index[17] ) + ( GND ) + ( A1L171 );
A1L203 = CARRY(A1L203_adder_eqn);


--A1L206 is Add1~109
A1L206_adder_eqn = ( T1_index[18] ) + ( GND ) + ( A1L203 );
A1L206 = SUM(A1L206_adder_eqn);

--A1L207 is Add1~110
A1L207_adder_eqn = ( T1_index[18] ) + ( GND ) + ( A1L203 );
A1L207 = CARRY(A1L207_adder_eqn);


--A1L210 is Add1~113
A1L210_adder_eqn = ( T1_index[19] ) + ( GND ) + ( A1L207 );
A1L210 = SUM(A1L210_adder_eqn);

--A1L211 is Add1~114
A1L211_adder_eqn = ( T1_index[19] ) + ( GND ) + ( A1L207 );
A1L211 = CARRY(A1L211_adder_eqn);


--A1L214 is Add1~117
A1L214_adder_eqn = ( T1_index[20] ) + ( GND ) + ( A1L211 );
A1L214 = SUM(A1L214_adder_eqn);

--A1L215 is Add1~118
A1L215_adder_eqn = ( T1_index[20] ) + ( GND ) + ( A1L211 );
A1L215 = CARRY(A1L215_adder_eqn);


--A1L218 is Add1~121
A1L218_adder_eqn = ( T1_index[22] ) + ( GND ) + ( A1L223 );
A1L218 = SUM(A1L218_adder_eqn);

--A1L219 is Add1~122
A1L219_adder_eqn = ( T1_index[22] ) + ( GND ) + ( A1L223 );
A1L219 = CARRY(A1L219_adder_eqn);


--A1L222 is Add1~125
A1L222_adder_eqn = ( T1_index[21] ) + ( GND ) + ( A1L215 );
A1L222 = SUM(A1L222_adder_eqn);

--A1L223 is Add1~126
A1L223_adder_eqn = ( T1_index[21] ) + ( GND ) + ( A1L215 );
A1L223 = CARRY(A1L223_adder_eqn);


--B1L2 is switch_debouncer:debouncer|Add0~1
B1L2_adder_eqn = ( B1_t[5] ) + ( GND ) + ( B1L51 );
B1L2 = SUM(B1L2_adder_eqn);

--B1L3 is switch_debouncer:debouncer|Add0~2
B1L3_adder_eqn = ( B1_t[5] ) + ( GND ) + ( B1L51 );
B1L3 = CARRY(B1L3_adder_eqn);


--B1L6 is switch_debouncer:debouncer|Add0~5
B1L6_adder_eqn = ( B1_t[12] ) + ( GND ) + ( B1L27 );
B1L6 = SUM(B1L6_adder_eqn);

--B1L7 is switch_debouncer:debouncer|Add0~6
B1L7_adder_eqn = ( B1_t[12] ) + ( GND ) + ( B1L27 );
B1L7 = CARRY(B1L7_adder_eqn);


--B1L10 is switch_debouncer:debouncer|Add0~9
B1L10_adder_eqn = ( B1_t[6] ) + ( GND ) + ( B1L3 );
B1L10 = SUM(B1L10_adder_eqn);

--B1L11 is switch_debouncer:debouncer|Add0~10
B1L11_adder_eqn = ( B1_t[6] ) + ( GND ) + ( B1L3 );
B1L11 = CARRY(B1L11_adder_eqn);


--B1L14 is switch_debouncer:debouncer|Add0~13
B1L14_adder_eqn = ( B1_t[7] ) + ( GND ) + ( B1L11 );
B1L14 = SUM(B1L14_adder_eqn);

--B1L15 is switch_debouncer:debouncer|Add0~14
B1L15_adder_eqn = ( B1_t[7] ) + ( GND ) + ( B1L11 );
B1L15 = CARRY(B1L15_adder_eqn);


--B1L18 is switch_debouncer:debouncer|Add0~17
B1L18_adder_eqn = ( B1_t[8] ) + ( GND ) + ( B1L15 );
B1L18 = SUM(B1L18_adder_eqn);

--B1L19 is switch_debouncer:debouncer|Add0~18
B1L19_adder_eqn = ( B1_t[8] ) + ( GND ) + ( B1L15 );
B1L19 = CARRY(B1L19_adder_eqn);


--B1L22 is switch_debouncer:debouncer|Add0~21
B1L22_adder_eqn = ( B1_t[9] ) + ( GND ) + ( B1L19 );
B1L22 = SUM(B1L22_adder_eqn);

--B1L23 is switch_debouncer:debouncer|Add0~22
B1L23_adder_eqn = ( B1_t[9] ) + ( GND ) + ( B1L19 );
B1L23 = CARRY(B1L23_adder_eqn);


--B1L26 is switch_debouncer:debouncer|Add0~25
B1L26_adder_eqn = ( B1_t[11] ) + ( GND ) + ( B1L31 );
B1L26 = SUM(B1L26_adder_eqn);

--B1L27 is switch_debouncer:debouncer|Add0~26
B1L27_adder_eqn = ( B1_t[11] ) + ( GND ) + ( B1L31 );
B1L27 = CARRY(B1L27_adder_eqn);


--B1L30 is switch_debouncer:debouncer|Add0~29
B1L30_adder_eqn = ( B1_t[10] ) + ( GND ) + ( B1L23 );
B1L30 = SUM(B1L30_adder_eqn);

--B1L31 is switch_debouncer:debouncer|Add0~30
B1L31_adder_eqn = ( B1_t[10] ) + ( GND ) + ( B1L23 );
B1L31 = CARRY(B1L31_adder_eqn);


--B1L34 is switch_debouncer:debouncer|Add0~33
B1L34_adder_eqn = ( B1_t[19] ) + ( GND ) + ( B1L75 );
B1L34 = SUM(B1L34_adder_eqn);


--B1L38 is switch_debouncer:debouncer|Add0~37
B1L38_adder_eqn = ( B1_t[2] ) + ( GND ) + ( B1L43 );
B1L38 = SUM(B1L38_adder_eqn);

--B1L39 is switch_debouncer:debouncer|Add0~38
B1L39_adder_eqn = ( B1_t[2] ) + ( GND ) + ( B1L43 );
B1L39 = CARRY(B1L39_adder_eqn);


--B1L42 is switch_debouncer:debouncer|Add0~41
B1L42_adder_eqn = ( B1_t[1] ) + ( GND ) + ( B1L47 );
B1L42 = SUM(B1L42_adder_eqn);

--B1L43 is switch_debouncer:debouncer|Add0~42
B1L43_adder_eqn = ( B1_t[1] ) + ( GND ) + ( B1L47 );
B1L43 = CARRY(B1L43_adder_eqn);


--B1L46 is switch_debouncer:debouncer|Add0~45
B1L46_adder_eqn = ( B1_t[0] ) + ( VCC ) + ( !VCC );
B1L46 = SUM(B1L46_adder_eqn);

--B1L47 is switch_debouncer:debouncer|Add0~46
B1L47_adder_eqn = ( B1_t[0] ) + ( VCC ) + ( !VCC );
B1L47 = CARRY(B1L47_adder_eqn);


--B1L50 is switch_debouncer:debouncer|Add0~49
B1L50_adder_eqn = ( B1_t[4] ) + ( GND ) + ( B1L55 );
B1L50 = SUM(B1L50_adder_eqn);

--B1L51 is switch_debouncer:debouncer|Add0~50
B1L51_adder_eqn = ( B1_t[4] ) + ( GND ) + ( B1L55 );
B1L51 = CARRY(B1L51_adder_eqn);


--B1L54 is switch_debouncer:debouncer|Add0~53
B1L54_adder_eqn = ( B1_t[3] ) + ( GND ) + ( B1L39 );
B1L54 = SUM(B1L54_adder_eqn);

--B1L55 is switch_debouncer:debouncer|Add0~54
B1L55_adder_eqn = ( B1_t[3] ) + ( GND ) + ( B1L39 );
B1L55 = CARRY(B1L55_adder_eqn);


--B1L58 is switch_debouncer:debouncer|Add0~57
B1L58_adder_eqn = ( B1_t[13] ) + ( GND ) + ( B1L7 );
B1L58 = SUM(B1L58_adder_eqn);

--B1L59 is switch_debouncer:debouncer|Add0~58
B1L59_adder_eqn = ( B1_t[13] ) + ( GND ) + ( B1L7 );
B1L59 = CARRY(B1L59_adder_eqn);


--B1L62 is switch_debouncer:debouncer|Add0~61
B1L62_adder_eqn = ( B1_t[14] ) + ( GND ) + ( B1L59 );
B1L62 = SUM(B1L62_adder_eqn);

--B1L63 is switch_debouncer:debouncer|Add0~62
B1L63_adder_eqn = ( B1_t[14] ) + ( GND ) + ( B1L59 );
B1L63 = CARRY(B1L63_adder_eqn);


--B1L66 is switch_debouncer:debouncer|Add0~65
B1L66_adder_eqn = ( B1_t[15] ) + ( GND ) + ( B1L63 );
B1L66 = SUM(B1L66_adder_eqn);

--B1L67 is switch_debouncer:debouncer|Add0~66
B1L67_adder_eqn = ( B1_t[15] ) + ( GND ) + ( B1L63 );
B1L67 = CARRY(B1L67_adder_eqn);


--B1L70 is switch_debouncer:debouncer|Add0~69
B1L70_adder_eqn = ( B1_t[16] ) + ( GND ) + ( B1L67 );
B1L70 = SUM(B1L70_adder_eqn);

--B1L71 is switch_debouncer:debouncer|Add0~70
B1L71_adder_eqn = ( B1_t[16] ) + ( GND ) + ( B1L67 );
B1L71 = CARRY(B1L71_adder_eqn);


--B1L74 is switch_debouncer:debouncer|Add0~73
B1L74_adder_eqn = ( B1_t[18] ) + ( GND ) + ( B1L79 );
B1L74 = SUM(B1L74_adder_eqn);

--B1L75 is switch_debouncer:debouncer|Add0~74
B1L75_adder_eqn = ( B1_t[18] ) + ( GND ) + ( B1L79 );
B1L75 = CARRY(B1L75_adder_eqn);


--B1L78 is switch_debouncer:debouncer|Add0~77
B1L78_adder_eqn = ( B1_t[17] ) + ( GND ) + ( B1L71 );
B1L78 = SUM(B1L78_adder_eqn);

--B1L79 is switch_debouncer:debouncer|Add0~78
B1L79_adder_eqn = ( B1_t[17] ) + ( GND ) + ( B1L71 );
B1L79 = CARRY(B1L79_adder_eqn);


--ssd[0] is ssd[0]
ssd[0] = OUTPUT(A1L550);


--ssd[1] is ssd[1]
ssd[1] = OUTPUT(A1L549);


--ssd[2] is ssd[2]
ssd[2] = OUTPUT(A1L547);


--ssd[3] is ssd[3]
ssd[3] = OUTPUT(A1L545);


--ssd[4] is ssd[4]
ssd[4] = OUTPUT(A1L543);


--ssd[5] is ssd[5]
ssd[5] = OUTPUT(A1L541);


--ssd[6] is ssd[6]
ssd[6] = OUTPUT(A1L539);


--pr_state.FA is pr_state.FA
--register power-up is low

pr_state.FA = DFFEAS(A1L438, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.EF is pr_state.EF
--register power-up is low

pr_state.EF = DFFEAS(A1L432, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.F is pr_state.F
--register power-up is low

pr_state.F = DFFEAS(A1L435, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr6 is WideOr6
WideOr6 = ((pr_state.F) # (pr_state.EF)) # (pr_state.FA);


--pr_state.DE is pr_state.DE
--register power-up is low

pr_state.DE = DFFEAS(A1L426, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.E is pr_state.E
--register power-up is low

pr_state.E = DFFEAS(A1L429, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr5 is WideOr5
WideOr5 = ((pr_state.E) # (pr_state.DE)) # (pr_state.EF);


--pr_state.CD is pr_state.CD
--register power-up is low

pr_state.CD = DFFEAS(A1L420, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.D is pr_state.D
--register power-up is low

pr_state.D = DFFEAS(A1L423, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr4 is WideOr4
WideOr4 = ((pr_state.D) # (pr_state.CD)) # (pr_state.DE);


--pr_state.BC is pr_state.BC
--register power-up is low

pr_state.BC = DFFEAS(A1L414, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.C is pr_state.C
--register power-up is low

pr_state.C = DFFEAS(A1L417, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr3 is WideOr3
WideOr3 = ((pr_state.C) # (pr_state.BC)) # (pr_state.CD);


--pr_state.AB is pr_state.AB
--register power-up is low

pr_state.AB = DFFEAS(A1L408, clk, rst,  ,  ,  ,  ,  ,  );


--pr_state.B is pr_state.B
--register power-up is low

pr_state.B = DFFEAS(A1L411, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr2 is WideOr2
WideOr2 = ((pr_state.B) # (pr_state.AB)) # (pr_state.BC);


--pr_state.A is pr_state.A
--register power-up is low

pr_state.A = DFFEAS(A1L405, clk, rst,  ,  ,  ,  ,  ,  );


--WideOr1 is WideOr1
WideOr1 = ((!pr_state.A) # (pr_state.AB)) # (pr_state.FA);


--A1L519 is t[19]~0
A1L519 = ( t[2] & ( (t[1] & (t[4] & (t[3] & t[0]))) ) );


--A1L520 is t[19]~1
A1L520 = (!t[6] & (!t[8] & !t[7]));


--A1L369 is LessThan1~0
A1L369 = (!t[13] & (!t[12] & (!t[10] & !t[11])));


--A1L370 is LessThan1~1
A1L370 = ( A1L369 & ( (!t[9]) # ((A1L520 & ((!t[5]) # (!A1L519)))) ) );


--A1L371 is LessThan1~2
A1L371 = (t[16] & (t[18] & (t[19] & t[17])));


--A1L372 is LessThan1~3
A1L372 = (!t[21] & (!t[22] & (!t[20] & !t[23])));


--A1L436 is Selector11~0
A1L436 = ( A1L371 & ( A1L372 & ( (pr_state.FA & (!t[15] & ((!t[14]) # (A1L370)))) ) ) ) # ( !A1L371 & ( A1L372 & ( pr_state.FA ) ) );


--A1L342 is LessThan0~0
A1L342 = ( A1L234 & ( A1L238 & ( (t[18] & (t[17] & (!t[16] $ (A1L230)))) ) ) ) # ( !A1L234 & ( A1L238 & ( (t[18] & (!t[17] & (!t[16] $ (A1L230)))) ) ) ) # ( A1L234 & ( !A1L238 & ( (!t[18] & (t[17] & (!t[16] $ (A1L230)))) ) ) ) # ( !A1L234 & ( !A1L238 & ( (!t[18] & (!t[17] & (!t[16] $ (A1L230)))) ) ) );


--A1L343 is LessThan0~1
A1L343 = !t[15] $ (!A1L242);


--T1[21] is T1[21]
--register power-up is low

T1[21] = DFFEAS(T1_index[0], !B1_y,  ,  ,  ,  ,  ,  ,  );


--A1L344 is LessThan0~2
A1L344 = ( T1[21] & ( (!t[6] & ((!t[5]) # ((!A1L519) # (A1L246)))) # (t[6] & (A1L246 & ((!t[5]) # (!A1L519)))) ) ) # ( !T1[21] & ( (!t[6] & (((!t[5] & !A1L519)) # (A1L246))) # (t[6] & (!t[5] & (!A1L519 & A1L246))) ) );


--A1L345 is LessThan0~3
A1L345 = ( A1L254 & ( (!t[8]) # ((!t[7] & ((A1L250) # (A1L344))) # (t[7] & (A1L344 & A1L250))) ) ) # ( !A1L254 & ( (!t[8] & ((!t[7] & ((A1L250) # (A1L344))) # (t[7] & (A1L344 & A1L250)))) ) );


--A1L346 is LessThan0~4
A1L346 = ( A1L262 & ( A1L266 & ( (t[10] & (t[11] & (!t[9] $ (A1L258)))) ) ) ) # ( !A1L262 & ( A1L266 & ( (!t[10] & (t[11] & (!t[9] $ (A1L258)))) ) ) ) # ( A1L262 & ( !A1L266 & ( (t[10] & (!t[11] & (!t[9] $ (A1L258)))) ) ) ) # ( !A1L262 & ( !A1L266 & ( (!t[10] & (!t[11] & (!t[9] $ (A1L258)))) ) ) );


--A1L347 is LessThan0~5
A1L347 = ( A1L262 & ( A1L266 & ( (!t[10]) # ((!t[11]) # ((!t[9] & A1L258))) ) ) ) # ( !A1L262 & ( A1L266 & ( (!t[11]) # ((!t[9] & (!t[10] & A1L258))) ) ) ) # ( A1L262 & ( !A1L266 & ( (!t[11] & ((!t[10]) # ((!t[9] & A1L258)))) ) ) ) # ( !A1L262 & ( !A1L266 & ( (!t[9] & (!t[10] & (!t[11] & A1L258))) ) ) );


--A1L348 is LessThan0~6
A1L348 = ( A1L274 & ( A1L278 & ( (t[14] & (t[13] & (!t[12] $ (A1L270)))) ) ) ) # ( !A1L274 & ( A1L278 & ( (t[14] & (!t[13] & (!t[12] $ (A1L270)))) ) ) ) # ( A1L274 & ( !A1L278 & ( (!t[14] & (t[13] & (!t[12] $ (A1L270)))) ) ) ) # ( !A1L274 & ( !A1L278 & ( (!t[14] & (!t[13] & (!t[12] $ (A1L270)))) ) ) );


--A1L349 is LessThan0~7
A1L349 = ( A1L274 & ( A1L278 & ( (!t[14]) # ((!t[13]) # ((!t[12] & A1L270))) ) ) ) # ( !A1L274 & ( A1L278 & ( (!t[14]) # ((!t[13] & (!t[12] & A1L270))) ) ) ) # ( A1L274 & ( !A1L278 & ( (!t[14] & ((!t[13]) # ((!t[12] & A1L270)))) ) ) ) # ( !A1L274 & ( !A1L278 & ( (!t[14] & (!t[13] & (!t[12] & A1L270))) ) ) );


--A1L350 is LessThan0~8
A1L350 = ( A1L348 & ( A1L349 & ( !A1L343 ) ) ) # ( !A1L348 & ( A1L349 & ( !A1L343 ) ) ) # ( A1L348 & ( !A1L349 & ( (!A1L343 & (((A1L345 & A1L346)) # (A1L347))) ) ) );


--A1L351 is LessThan0~9
A1L351 = ( A1L363 & ( (t[16] & !A1L362) ) ) # ( !A1L363 & ( (!A1L362) # ((t[16] & (!t[17] $ (A1L234)))) ) );


--A1L352 is LessThan0~10
A1L352 = !t[19] $ (!A1L282);


--A1L353 is LessThan0~11
A1L353 = !t[20] $ (!A1L286);


--A1L354 is LessThan0~12
A1L354 = ( A1L294 & ( A1L298 & ( (t[22] & (t[23] & (!t[21] $ (A1L290)))) ) ) ) # ( !A1L294 & ( A1L298 & ( (!t[22] & (t[23] & (!t[21] $ (A1L290)))) ) ) ) # ( A1L294 & ( !A1L298 & ( (t[22] & (!t[23] & (!t[21] $ (A1L290)))) ) ) ) # ( !A1L294 & ( !A1L298 & ( (!t[22] & (!t[23] & (!t[21] $ (A1L290)))) ) ) );


--A1L355 is LessThan0~13
A1L355 = ( !A1L353 & ( A1L354 & ( (!A1L352 & ((!A1L351) # ((A1L342 & A1L350)))) ) ) );


--A1L356 is LessThan0~14
A1L356 = ( !A1L318 & ( !A1L322 & ( (!A1L302 & (!A1L306 & (!A1L310 & !A1L314))) ) ) );


--A1L357 is LessThan0~15
A1L357 = ( A1L367 & ( A1L368 & ( (!A1L326 & (!A1L365 & !A1L366)) ) ) ) # ( !A1L367 & ( A1L368 & ( (!A1L326 & ((!A1L365) # ((t[21] & !A1L366)))) ) ) ) # ( A1L367 & ( !A1L368 & ( (!A1L326 & (!A1L365 & !A1L366)) ) ) ) # ( !A1L367 & ( !A1L368 & ( (!A1L326 & ((!A1L365) # (!A1L366))) ) ) );


--dir is dir
dir = INPUT();


--A1L437 is Selector11~1
A1L437 = (!dir & ((!pr_state.A))) # (dir & (pr_state.F));


--A1L438 is Selector11~2
A1L438 = ( A1L357 & ( A1L437 & ( ((!A1L226) # ((!A1L355 & A1L356))) # (A1L436) ) ) ) # ( !A1L357 & ( A1L437 & ( (!A1L226) # (A1L436) ) ) ) # ( A1L357 & ( !A1L437 & ( A1L436 ) ) ) # ( !A1L357 & ( !A1L437 & ( A1L436 ) ) );


--clk is clk
clk = INPUT();


--rst is rst
rst = INPUT();


--A1L430 is Selector9~0
A1L430 = ( A1L371 & ( A1L372 & ( (pr_state.EF & (!t[15] & ((!t[14]) # (A1L370)))) ) ) ) # ( !A1L371 & ( A1L372 & ( pr_state.EF ) ) );


--A1L431 is Selector9~1
A1L431 = (!dir & (pr_state.F)) # (dir & ((pr_state.E)));


--A1L432 is Selector9~2
A1L432 = ( A1L430 & ( A1L431 ) ) # ( !A1L430 & ( A1L431 & ( (!A1L226) # ((!A1L355 & (A1L356 & A1L357))) ) ) ) # ( A1L430 & ( !A1L431 ) );


--A1L433 is Selector10~0
A1L433 = (!dir & (pr_state.FA)) # (dir & ((pr_state.EF)));


--A1L434 is Selector10~1
A1L434 = ( A1L372 & ( A1L433 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L433 ) );


--A1L435 is Selector10~2
A1L435 = ( A1L357 & ( A1L434 ) ) # ( !A1L357 & ( A1L434 ) ) # ( A1L357 & ( !A1L434 & ( (pr_state.F & (A1L226 & ((!A1L356) # (A1L355)))) ) ) ) # ( !A1L357 & ( !A1L434 & ( (pr_state.F & A1L226) ) ) );


--A1L373 is LessThan1~4
A1L373 = ( A1L372 & ( (!A1L371) # ((!t[15] & ((!t[14]) # (A1L370)))) ) );


--A1L424 is Selector7~0
A1L424 = (pr_state.DE & A1L373);


--A1L425 is Selector7~1
A1L425 = (!dir & (pr_state.E)) # (dir & ((pr_state.D)));


--A1L426 is Selector7~2
A1L426 = ( A1L424 & ( A1L425 ) ) # ( !A1L424 & ( A1L425 & ( (!A1L226) # ((!A1L355 & (A1L356 & A1L357))) ) ) ) # ( A1L424 & ( !A1L425 ) );


--A1L427 is Selector8~0
A1L427 = (!dir & (pr_state.EF)) # (dir & ((pr_state.DE)));


--A1L428 is Selector8~1
A1L428 = ( A1L372 & ( A1L427 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L427 ) );


--A1L429 is Selector8~2
A1L429 = ( A1L357 & ( A1L428 ) ) # ( !A1L357 & ( A1L428 ) ) # ( A1L357 & ( !A1L428 & ( (pr_state.E & (A1L226 & ((!A1L356) # (A1L355)))) ) ) ) # ( !A1L357 & ( !A1L428 & ( (pr_state.E & A1L226) ) ) );


--A1L418 is Selector5~0
A1L418 = (pr_state.CD & A1L373);


--A1L419 is Selector5~1
A1L419 = (!dir & (pr_state.D)) # (dir & ((pr_state.C)));


--A1L420 is Selector5~2
A1L420 = ( A1L418 & ( A1L419 ) ) # ( !A1L418 & ( A1L419 & ( (!A1L226) # ((!A1L355 & (A1L356 & A1L357))) ) ) ) # ( A1L418 & ( !A1L419 ) );


--A1L421 is Selector6~0
A1L421 = (!dir & (pr_state.DE)) # (dir & ((pr_state.CD)));


--A1L422 is Selector6~1
A1L422 = ( A1L372 & ( A1L421 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L421 ) );


--A1L423 is Selector6~2
A1L423 = ( A1L357 & ( A1L422 ) ) # ( !A1L357 & ( A1L422 ) ) # ( A1L357 & ( !A1L422 & ( (pr_state.D & (A1L226 & ((!A1L356) # (A1L355)))) ) ) ) # ( !A1L357 & ( !A1L422 & ( (pr_state.D & A1L226) ) ) );


--A1L412 is Selector3~0
A1L412 = ( A1L371 & ( A1L372 & ( (pr_state.BC & (!t[15] & ((!t[14]) # (A1L370)))) ) ) ) # ( !A1L371 & ( A1L372 & ( pr_state.BC ) ) );


--A1L413 is Selector3~1
A1L413 = (!dir & (pr_state.C)) # (dir & ((pr_state.B)));


--A1L414 is Selector3~2
A1L414 = ( A1L412 & ( A1L413 ) ) # ( !A1L412 & ( A1L413 & ( (!A1L226) # ((!A1L355 & (A1L356 & A1L357))) ) ) ) # ( A1L412 & ( !A1L413 ) );


--A1L415 is Selector4~0
A1L415 = (!dir & (pr_state.CD)) # (dir & ((pr_state.BC)));


--A1L416 is Selector4~1
A1L416 = ( A1L372 & ( A1L415 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L415 ) );


--A1L417 is Selector4~2
A1L417 = ( A1L357 & ( A1L416 ) ) # ( !A1L357 & ( A1L416 ) ) # ( A1L357 & ( !A1L416 & ( (pr_state.C & (A1L226 & ((!A1L356) # (A1L355)))) ) ) ) # ( !A1L357 & ( !A1L416 & ( (pr_state.C & A1L226) ) ) );


--A1L406 is Selector1~0
A1L406 = ( A1L371 & ( A1L372 & ( (pr_state.AB & (!t[15] & ((!t[14]) # (A1L370)))) ) ) ) # ( !A1L371 & ( A1L372 & ( pr_state.AB ) ) );


--A1L407 is Selector1~1
A1L407 = (!dir & (pr_state.B)) # (dir & ((!pr_state.A)));


--A1L408 is Selector1~2
A1L408 = ( A1L406 & ( A1L407 ) ) # ( !A1L406 & ( A1L407 & ( (!A1L226) # ((!A1L355 & (A1L356 & A1L357))) ) ) ) # ( A1L406 & ( !A1L407 ) );


--A1L409 is Selector2~0
A1L409 = (!dir & (pr_state.BC)) # (dir & ((pr_state.AB)));


--A1L410 is Selector2~1
A1L410 = ( A1L372 & ( A1L409 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L409 ) );


--A1L411 is Selector2~2
A1L411 = ( A1L357 & ( A1L410 ) ) # ( !A1L357 & ( A1L410 ) ) # ( A1L357 & ( !A1L410 & ( (pr_state.B & (A1L226 & ((!A1L356) # (A1L355)))) ) ) ) # ( !A1L357 & ( !A1L410 & ( (pr_state.B & A1L226) ) ) );


--A1L403 is Selector0~0
A1L403 = (!dir & ((pr_state.AB))) # (dir & (pr_state.FA));


--A1L404 is Selector0~1
A1L404 = ( A1L372 & ( A1L403 & ( (A1L371 & (((t[14] & !A1L370)) # (t[15]))) ) ) ) # ( !A1L372 & ( A1L403 ) );


--A1L405 is Selector0~2
A1L405 = ( A1L357 & ( !A1L404 & ( ((!A1L226) # ((!A1L355 & A1L356))) # (pr_state.A) ) ) ) # ( !A1L357 & ( !A1L404 & ( (!A1L226) # (pr_state.A) ) ) );


--A1L358 is LessThan0~16
A1L358 = ( A1L254 & ( A1L346 & ( (!t[8]) # ((!t[7] & ((A1L250) # (A1L344))) # (t[7] & (A1L344 & A1L250))) ) ) ) # ( !A1L254 & ( A1L346 & ( (!t[8] & ((!t[7] & ((A1L250) # (A1L344))) # (t[7] & (A1L344 & A1L250)))) ) ) );


--A1L359 is LessThan0~17
A1L359 = ( A1L348 & ( A1L349 & ( (A1L342 & !A1L343) ) ) ) # ( !A1L348 & ( A1L349 & ( (A1L342 & !A1L343) ) ) ) # ( A1L348 & ( !A1L349 & ( (A1L342 & (!A1L343 & ((A1L347) # (A1L358)))) ) ) );


--A1L360 is LessThan0~18
A1L360 = ( A1L364 & ( (!t[23] & (!A1L298 & (!t[19] $ (A1L282)))) # (t[23] & (A1L298 & (!t[19] $ (A1L282)))) ) );


--A1L361 is LessThan0~19
A1L361 = ( A1L356 & ( A1L357 & ( (A1L226 & (A1L360 & ((!A1L351) # (A1L359)))) ) ) ) # ( !A1L356 & ( A1L357 & ( A1L226 ) ) ) # ( A1L356 & ( !A1L357 & ( A1L226 ) ) ) # ( !A1L356 & ( !A1L357 & ( A1L226 ) ) );


--A1L530 is WideOr0~0
A1L530 = ( A1L404 & ( (!pr_state.A & ((!pr_state.B & ((!A1L410))) # (pr_state.B & ((A1L410) # (A1L361))))) ) ) # ( !A1L404 & ( (!A1L361 & (pr_state.A & (!pr_state.B $ (A1L410)))) # (A1L361 & (((!A1L410)) # (pr_state.B))) ) );


--A1L531 is WideOr0~1
A1L531 = ( A1L413 & ( A1L407 & ( (!A1L361 & ((!pr_state.BC) # ((!pr_state.AB)))) # (A1L361 & (!A1L373 & ((pr_state.AB) # (pr_state.BC)))) ) ) ) # ( !A1L413 & ( A1L407 & ( (!A1L373 & ((!pr_state.AB $ (A1L361)) # (pr_state.BC))) # (A1L373 & (((!pr_state.AB & !A1L361)))) ) ) ) # ( A1L413 & ( !A1L407 & ( (!A1L373 & ((!pr_state.BC $ (A1L361)) # (pr_state.AB))) # (A1L373 & (!pr_state.BC & ((!A1L361)))) ) ) ) # ( !A1L413 & ( !A1L407 & ( (!A1L373 & ((pr_state.AB) # (pr_state.BC))) ) ) );


--A1L532 is WideOr0~2
A1L532 = ( A1L428 & ( (pr_state.E & ((!pr_state.F & ((!A1L434))) # (pr_state.F & ((A1L434) # (A1L361))))) ) ) # ( !A1L428 & ( (!A1L361 & (!pr_state.E & (!pr_state.F $ (A1L434)))) # (A1L361 & (((!A1L434)) # (pr_state.F))) ) );


--A1L533 is WideOr0~3
A1L533 = ( A1L437 & ( A1L431 & ( (!A1L361 & ((!pr_state.FA) # ((!pr_state.EF)))) # (A1L361 & (!A1L373 & ((pr_state.EF) # (pr_state.FA)))) ) ) ) # ( !A1L437 & ( A1L431 & ( (!A1L373 & ((!pr_state.EF $ (A1L361)) # (pr_state.FA))) # (A1L373 & (((!pr_state.EF & !A1L361)))) ) ) ) # ( A1L437 & ( !A1L431 & ( (!A1L373 & ((!pr_state.FA $ (A1L361)) # (pr_state.EF))) # (A1L373 & (!pr_state.FA & ((!A1L361)))) ) ) ) # ( !A1L437 & ( !A1L431 & ( (!A1L373 & ((pr_state.EF) # (pr_state.FA))) ) ) );


--A1L534 is WideOr0~4
A1L534 = ( A1L416 & ( (pr_state.C & ((!pr_state.D & ((!A1L422))) # (pr_state.D & ((A1L422) # (A1L361))))) ) ) # ( !A1L416 & ( (!A1L361 & (!pr_state.C & (!pr_state.D $ (A1L422)))) # (A1L361 & (((!A1L422)) # (pr_state.D))) ) );


--A1L535 is WideOr0~5
A1L535 = ( A1L425 & ( A1L419 & ( (!A1L361 & ((!pr_state.DE) # ((!pr_state.CD)))) # (A1L361 & (!A1L373 & ((pr_state.CD) # (pr_state.DE)))) ) ) ) # ( !A1L425 & ( A1L419 & ( (!A1L373 & ((!pr_state.CD $ (A1L361)) # (pr_state.DE))) # (A1L373 & (((!pr_state.CD & !A1L361)))) ) ) ) # ( A1L425 & ( !A1L419 & ( (!A1L373 & ((!pr_state.DE $ (A1L361)) # (pr_state.CD))) # (A1L373 & (!pr_state.DE & ((!A1L361)))) ) ) ) # ( !A1L425 & ( !A1L419 & ( (!A1L373 & ((pr_state.CD) # (pr_state.DE))) ) ) );


--WideOr0 is WideOr0
WideOr0 = ( A1L534 & ( A1L535 ) ) # ( !A1L534 & ( A1L535 ) ) # ( A1L534 & ( !A1L535 & ( (!A1L530) # (((!A1L532) # (A1L533)) # (A1L531)) ) ) ) # ( !A1L534 & ( !A1L535 ) );


--A1L398 is process_0~12
A1L398 = ( A1L357 & ( A1L410 & ( !pr_state.B ) ) ) # ( !A1L357 & ( A1L410 & ( !pr_state.B ) ) ) # ( A1L357 & ( !A1L410 & ( (pr_state.B & ((!A1L226) # ((!A1L355 & A1L356)))) ) ) ) # ( !A1L357 & ( !A1L410 & ( (pr_state.B & !A1L226) ) ) );


--A1L399 is process_0~13
A1L399 = ( A1L357 & ( A1L404 & ( pr_state.A ) ) ) # ( !A1L357 & ( A1L404 & ( pr_state.A ) ) ) # ( A1L357 & ( !A1L404 & ( (!pr_state.A & ((!A1L226) # ((!A1L355 & A1L356)))) ) ) ) # ( !A1L357 & ( !A1L404 & ( (!pr_state.A & !A1L226) ) ) );


--A1L536 is WideOr0~6
A1L536 = ( !A1L398 & ( !A1L399 & ( (!pr_state.BC & (!A1L414 & (!pr_state.AB $ (A1L408)))) # (pr_state.BC & (A1L414 & (!pr_state.AB $ (A1L408)))) ) ) );


--A1L400 is process_0~14
A1L400 = ( A1L357 & ( A1L434 & ( !pr_state.F ) ) ) # ( !A1L357 & ( A1L434 & ( !pr_state.F ) ) ) # ( A1L357 & ( !A1L434 & ( (pr_state.F & ((!A1L226) # ((!A1L355 & A1L356)))) ) ) ) # ( !A1L357 & ( !A1L434 & ( (pr_state.F & !A1L226) ) ) );


--A1L401 is process_0~15
A1L401 = ( A1L357 & ( A1L428 & ( !pr_state.E ) ) ) # ( !A1L357 & ( A1L428 & ( !pr_state.E ) ) ) # ( A1L357 & ( !A1L428 & ( (pr_state.E & ((!A1L226) # ((!A1L355 & A1L356)))) ) ) ) # ( !A1L357 & ( !A1L428 & ( (pr_state.E & !A1L226) ) ) );


--A1L537 is WideOr0~7
A1L537 = ( !A1L400 & ( !A1L401 & ( (!pr_state.FA & (!A1L438 & (!pr_state.EF $ (A1L432)))) # (pr_state.FA & (A1L438 & (!pr_state.EF $ (A1L432)))) ) ) );


--stp is stp
stp = INPUT();


--A1L521 is t[19]~2
A1L521 = (t[18] & (t[19] & (t[17] & t[21])));


--A1L522 is t[19]~3
A1L522 = ( t[11] & ( t[20] & ( (!t[9] & (!t[5] & (t[12] & t[10]))) ) ) );


--A1L523 is t[19]~4
A1L523 = ( t[23] & ( (t[15] & (!t[14] & (t[13] & !t[16]))) ) );


--A1L524 is t[19]~5
A1L524 = ( A1L522 & ( A1L523 & ( (A1L519 & (A1L520 & (!t[22] & A1L521))) ) ) );


--A1L504 is t[5]~6
A1L504 = ( !stp & ( A1L524 & ( (!A1L536) # ((!A1L537) # ((!A1L534) # (A1L535))) ) ) ) # ( !stp & ( !A1L524 ) );


--T1[16] is T1[16]
--register power-up is low

T1[16] = DFFEAS(A1L378, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[14] is T1[14]
--register power-up is low

T1[14] = DFFEAS(A1L380, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[18] is T1[18]
--register power-up is low

T1[18] = DFFEAS(A1L377, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[15] is T1[15]
--register power-up is low

T1[15] = DFFEAS(A1L379, !B1_y,  ,  ,  ,  ,  ,  ,  );


--B1_y is switch_debouncer:debouncer|y
--register power-up is low

B1_y = DFFEAS(B1L108, clk,  ,  ,  ,  ,  ,  ,  );


--T1[7] is T1[7]
--register power-up is low

T1[7] = DFFEAS(A1L385, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[8] is T1[8]
--register power-up is low

T1[8] = DFFEAS(A1L383, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[9] is T1[9]
--register power-up is low

T1[9] = DFFEAS(A1L382, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[10] is T1[10]
--register power-up is low

T1[10] = DFFEAS(A1L384, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[11] is T1[11]
--register power-up is low

T1[11] = DFFEAS(A1L381, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[23] is T1[23]
--register power-up is low

T1[23] = DFFEAS(A1L374, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[19] is T1[19]
--register power-up is low

T1[19] = DFFEAS(A1L376, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[20] is T1[20]
--register power-up is low

T1[20] = DFFEAS(A1L375, !B1_y,  ,  ,  ,  ,  ,  ,  );


--T1[22] is T1[22]
--register power-up is low

T1[22] = DFFEAS(T1_index[1], !B1_y,  ,  ,  ,  ,  ,  ,  );


--A1L378 is Mux5~0
A1L378 = (!T1_index[0] & (!T1_index[2] $ (!T1_index[1]))) # (T1_index[0] & (!T1_index[2] & !T1_index[1]));


--A1L380 is Mux7~0
A1L380 = !T1_index[0] $ (!T1_index[2]);


--A1L377 is Mux3~0
A1L377 = (!T1_index[2] & (!T1_index[0] $ (!T1_index[1])));


--A1L379 is Mux6~0
A1L379 = (!T1_index[0] $ (!T1_index[2])) # (T1_index[1]);


--A1L335 is Equal1~0
A1L335 = (!T1_index[30] & !T1_index[29]);


--A1L336 is Equal1~1
A1L336 = ( !T1_index[4] & ( !T1_index[28] & ( (T1_index[0] & (T1_index[2] & (!T1_index[1] & !T1_index[31]))) ) ) );


--A1L337 is Equal1~2
A1L337 = ( !T1_index[10] & ( !T1_index[9] & ( (!T1_index[5] & (!T1_index[6] & (!T1_index[7] & !T1_index[8]))) ) ) );


--A1L338 is Equal1~3
A1L338 = ( !T1_index[16] & ( !T1_index[15] & ( (!T1_index[11] & (!T1_index[12] & (!T1_index[13] & !T1_index[14]))) ) ) );


--A1L339 is Equal1~4
A1L339 = ( !T1_index[3] & ( !T1_index[27] & ( (!T1_index[23] & (!T1_index[24] & (!T1_index[25] & !T1_index[26]))) ) ) );


--A1L340 is Equal1~5
A1L340 = ( !T1_index[22] & ( !T1_index[21] & ( (!T1_index[17] & (!T1_index[18] & (!T1_index[19] & !T1_index[20]))) ) ) );


--A1L341 is Equal1~6
A1L341 = ( A1L339 & ( A1L340 & ( (A1L335 & (A1L336 & (A1L337 & A1L338))) ) ) );


--spd is spd
spd = INPUT();


--B1L81 is switch_debouncer:debouncer|Equal0~0
B1L81 = (!B1_t[5] & !B1_t[12]);


--B1L82 is switch_debouncer:debouncer|Equal0~1
B1L82 = ( !B1_t[11] & ( !B1_t[10] & ( (B1_t[6] & (!B1_t[7] & (!B1_t[8] & B1_t[9]))) ) ) );


--B1L83 is switch_debouncer:debouncer|Equal0~2
B1L83 = ( !B1_t[4] & ( !B1_t[3] & ( (B1_t[19] & (!B1_t[2] & (!B1_t[1] & !B1_t[0]))) ) ) );


--B1L84 is switch_debouncer:debouncer|Equal0~3
B1L84 = ( B1_t[18] & ( B1_t[17] & ( (!B1_t[13] & (B1_t[14] & (!B1_t[15] & B1_t[16]))) ) ) );


--B1L108 is switch_debouncer:debouncer|y~0
B1L108 = ( B1L83 & ( B1L84 & ( (!B1L81 & (B1_y)) # (B1L81 & ((!B1L82 & (B1_y)) # (B1L82 & ((spd))))) ) ) ) # ( !B1L83 & ( B1L84 & ( B1_y ) ) ) # ( B1L83 & ( !B1L84 & ( B1_y ) ) ) # ( !B1L83 & ( !B1L84 & ( B1_y ) ) );


--A1L385 is Mux12~0
A1L385 = ((!T1_index[0] & T1_index[1])) # (T1_index[2]);


--A1L383 is Mux11~0
A1L383 = (!T1_index[0] & (T1_index[2] & !T1_index[1])) # (T1_index[0] & (!T1_index[2] & T1_index[1]));


--A1L382 is Mux10~0
A1L382 = ((!T1_index[0] & T1_index[2])) # (T1_index[1]);


--A1L384 is Mux11~1
A1L384 = (T1_index[0] & T1_index[1]);


--A1L381 is Mux8~0
A1L381 = (!T1_index[1] & ((T1_index[2]) # (T1_index[0])));


--A1L374 is Mux0~0
A1L374 = (T1_index[1]) # (T1_index[2]);


--A1L376 is Mux2~0
A1L376 = (!T1_index[0] & ((T1_index[1]) # (T1_index[2])));


--A1L375 is Mux1~0
A1L375 = ((T1_index[0] & !T1_index[2])) # (T1_index[1]);


--B1L85 is switch_debouncer:debouncer|process_0~0
B1L85 = !B1_y $ (spd);


--A1L362 is LessThan0~20
A1L362 = ( t[15] & ( A1L242 & ( (!t[18] & (((!t[17] & A1L234)) # (A1L238))) # (t[18] & (A1L238 & (!t[17] & A1L234))) ) ) ) # ( !t[15] & ( A1L242 & ( (!t[18] & (((!t[17]) # (A1L234)) # (A1L238))) # (t[18] & (A1L238 & ((!t[17]) # (A1L234)))) ) ) ) # ( t[15] & ( !A1L242 & ( (!t[18] & (((!t[17] & A1L234)) # (A1L238))) # (t[18] & (A1L238 & (!t[17] & A1L234))) ) ) ) # ( !t[15] & ( !A1L242 & ( (!t[18] & (((!t[17] & A1L234)) # (A1L238))) # (t[18] & (A1L238 & (!t[17] & A1L234))) ) ) );


--A1L363 is LessThan0~21
A1L363 = ( A1L234 & ( (!t[18] & (((!t[17]) # (A1L238)) # (A1L230))) # (t[18] & (A1L230 & (A1L238))) ) ) # ( !A1L234 & ( (!A1L230 & (!t[18] & (A1L238))) # (A1L230 & (!t[17] & ((!t[18]) # (A1L238)))) ) );


--A1L364 is LessThan0~22
A1L364 = ( t[22] & ( A1L294 & ( (!t[20] & (!A1L286 & (!t[21] $ (A1L290)))) # (t[20] & (A1L286 & (!t[21] $ (A1L290)))) ) ) ) # ( !t[22] & ( !A1L294 & ( (!t[20] & (!A1L286 & (!t[21] $ (A1L290)))) # (t[20] & (A1L286 & (!t[21] $ (A1L290)))) ) ) );


--A1L365 is LessThan0~23
A1L365 = ( t[19] & ( A1L282 & ( (!t[22] & (((!t[21] & A1L290)) # (A1L294))) # (t[22] & (!t[21] & (A1L290 & A1L294))) ) ) ) # ( !t[19] & ( A1L282 & ( (!t[22] & ((!t[21]) # ((A1L294) # (A1L290)))) # (t[22] & (A1L294 & ((!t[21]) # (A1L290)))) ) ) ) # ( t[19] & ( !A1L282 & ( (!t[22] & (((!t[21] & A1L290)) # (A1L294))) # (t[22] & (!t[21] & (A1L290 & A1L294))) ) ) ) # ( !t[19] & ( !A1L282 & ( (!t[22] & (((!t[21] & A1L290)) # (A1L294))) # (t[22] & (!t[21] & (A1L290 & A1L294))) ) ) );


--A1L366 is LessThan0~24
A1L366 = ( A1L298 & ( (!t[23]) # ((!A1L286 & (!t[22] & A1L294)) # (A1L286 & ((!t[22]) # (A1L294)))) ) ) # ( !A1L298 & ( (!t[23] & ((!A1L286 & (!t[22] & A1L294)) # (A1L286 & ((!t[22]) # (A1L294))))) ) );


--A1L367 is LessThan0~25
A1L367 = ( A1L298 & ( (!t[23]) # ((!t[20] & ((!t[21]) # (A1L290)))) ) ) # ( !A1L298 & ( (!t[23] & ((!t[20] & ((!t[21]) # (A1L290))) # (t[20] & (!t[21] & A1L290)))) ) );


--A1L368 is LessThan0~26
A1L368 = (A1L290 & A1L298);


--A1L550 is ~VCC
A1L550 = VCC;


--A1L539 is WideOr1~_wirecell
A1L539 = !WideOr1;


--A1L541 is WideOr2~_wirecell
A1L541 = !WideOr2;


--A1L543 is WideOr3~_wirecell
A1L543 = !WideOr3;


--A1L545 is WideOr4~_wirecell
A1L545 = !WideOr4;


--A1L547 is WideOr5~_wirecell
A1L547 = !WideOr5;


--A1L549 is WideOr6~_wirecell
A1L549 = !WideOr6;


