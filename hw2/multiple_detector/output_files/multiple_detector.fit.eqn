-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--F1L1 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[0]~0 at LCCOMB_X13_Y14_N0
F1L1 = (A1L7 & ((GND) # (!A1L15))) # (!A1L7 & (A1L15 $ (GND)));

--F1L2 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[0]~1 at LCCOMB_X13_Y14_N0
F1L2 = CARRY((A1L7) # (!A1L15));


--F1L3 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[1]~2 at LCCOMB_X13_Y14_N2
F1L3 = (A1L17 & ((F1L34 & (!F1L2)) # (!F1L34 & ((F1L2) # (GND))))) # (!A1L17 & ((F1L34 & (F1L2 & VCC)) # (!F1L34 & (!F1L2))));

--F1L4 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[1]~3 at LCCOMB_X13_Y14_N2
F1L4 = CARRY((A1L17 & ((!F1L2) # (!F1L34))) # (!A1L17 & (!F1L34 & !F1L2)));


--F1L5 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[2]~4 at LCCOMB_X13_Y14_N4
F1L5 = ((A1L19 $ (F1L36 $ (F1L4)))) # (GND);

--F1L6 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[2]~5 at LCCOMB_X13_Y14_N4
F1L6 = CARRY((A1L19 & (F1L36 & !F1L4)) # (!A1L19 & ((F1L36) # (!F1L4))));


--F1L7 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_2_result_int[3]~6 at LCCOMB_X13_Y14_N6
F1L7 = !F1L6;


--F1L9 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[0]~0 at LCCOMB_X13_Y14_N8
F1L9 = (A1L5 & ((GND) # (!A1L15))) # (!A1L5 & (A1L15 $ (GND)));

--F1L10 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[0]~1 at LCCOMB_X13_Y14_N8
F1L10 = CARRY((A1L5) # (!A1L15));


--F1L11 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[1]~2 at LCCOMB_X13_Y14_N10
F1L11 = (A1L17 & ((F1L37 & (!F1L10)) # (!F1L37 & ((F1L10) # (GND))))) # (!A1L17 & ((F1L37 & (F1L10 & VCC)) # (!F1L37 & (!F1L10))));

--F1L12 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[1]~3 at LCCOMB_X13_Y14_N10
F1L12 = CARRY((A1L17 & ((!F1L10) # (!F1L37))) # (!A1L17 & (!F1L37 & !F1L10)));


--F1L13 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[2]~4 at LCCOMB_X13_Y14_N12
F1L13 = ((A1L19 $ (F1L38 $ (F1L12)))) # (GND);

--F1L14 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[2]~5 at LCCOMB_X13_Y14_N12
F1L14 = CARRY((A1L19 & (F1L38 & !F1L12)) # (!A1L19 & ((F1L38) # (!F1L12))));


--F1L15 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[3]~6 at LCCOMB_X13_Y14_N14
F1L15 = (F1L39 & ((A1L21 & (!F1L14)) # (!A1L21 & (F1L14 & VCC)))) # (!F1L39 & ((A1L21 & ((F1L14) # (GND))) # (!A1L21 & (!F1L14))));

--F1L16 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[3]~7 at LCCOMB_X13_Y14_N14
F1L16 = CARRY((F1L39 & (A1L21 & !F1L14)) # (!F1L39 & ((A1L21) # (!F1L14))));


--F1L17 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_3_result_int[4]~8 at LCCOMB_X13_Y14_N16
F1L17 = F1L16;


--F1L19 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[0]~0 at LCCOMB_X12_Y14_N6
F1L19 = (A1L15 & (A1L3 $ (VCC))) # (!A1L15 & ((A1L3) # (GND)));

--F1L20 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[0]~1 at LCCOMB_X12_Y14_N6
F1L20 = CARRY((A1L3) # (!A1L15));


--F1L21 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[1]~2 at LCCOMB_X12_Y14_N8
F1L21 = (A1L17 & ((F1L40 & (!F1L20)) # (!F1L40 & ((F1L20) # (GND))))) # (!A1L17 & ((F1L40 & (F1L20 & VCC)) # (!F1L40 & (!F1L20))));

--F1L22 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[1]~3 at LCCOMB_X12_Y14_N8
F1L22 = CARRY((A1L17 & ((!F1L20) # (!F1L40))) # (!A1L17 & (!F1L40 & !F1L20)));


--F1L23 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[2]~4 at LCCOMB_X12_Y14_N10
F1L23 = ((A1L19 $ (F1L41 $ (F1L22)))) # (GND);

--F1L24 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[2]~5 at LCCOMB_X12_Y14_N10
F1L24 = CARRY((A1L19 & (F1L41 & !F1L22)) # (!A1L19 & ((F1L41) # (!F1L22))));


--F1L25 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[3]~6 at LCCOMB_X12_Y14_N12
F1L25 = (F1L42 & ((A1L21 & (!F1L24)) # (!A1L21 & (F1L24 & VCC)))) # (!F1L42 & ((A1L21 & ((F1L24) # (GND))) # (!A1L21 & (!F1L24))));

--F1L26 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[3]~7 at LCCOMB_X12_Y14_N12
F1L26 = CARRY((F1L42 & (A1L21 & !F1L24)) # (!F1L42 & ((A1L21) # (!F1L24))));


--F1L27 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[4]~8 at LCCOMB_X12_Y14_N14
F1L27 = ((A1L23 $ (F1L43 $ (F1L26)))) # (GND);

--F1L28 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[4]~9 at LCCOMB_X12_Y14_N14
F1L28 = CARRY((A1L23 & (F1L43 & !F1L26)) # (!A1L23 & ((F1L43) # (!F1L26))));


--F1L29 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|add_sub_4_result_int[5]~10 at LCCOMB_X12_Y14_N16
F1L29 = !F1L28;


--F1L35 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[6]~0 at LCCOMB_X12_Y14_N24
F1L35 = (A1L17 & (A1L15 & !A1L9)) # (!A1L17 & (!A1L15));


--A1L24 is Equal1~0 at LCCOMB_X12_Y14_N26
A1L24 = (!A1L19 & (!A1L21 & !A1L23));


--F1L36 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[6]~1 at LCCOMB_X12_Y14_N20
F1L36 = (A1L11 & ((F1L35) # (!A1L24)));


--F1L33 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[5]~2 at LCCOMB_X12_Y14_N2
F1L33 = ((A1L21) # ((A1L23) # (A1L19))) # (!A1L15);


--F1L34 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[5]~3 at LCCOMB_X12_Y16_N24
F1L34 = (A1L9 & ((F1L33) # ((A1L17 & !A1L11))));


--F1_selnose[12] is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|selnose[12] at LCCOMB_X13_Y14_N26
F1_selnose[12] = (A1L21) # ((A1L23) # (F1L7));


--F1L37 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[10]~4 at LCCOMB_X13_Y14_N28
F1L37 = (F1_selnose[12] & ((A1L7))) # (!F1_selnose[12] & (F1L1));


--F1L39 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[12]~5 at LCCOMB_X13_Y14_N30
F1L39 = (F1_selnose[12] & (F1L36)) # (!F1_selnose[12] & ((F1L5)));


--F1L38 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[11]~6 at LCCOMB_X13_Y13_N0
F1L38 = (F1_selnose[12] & (F1L34)) # (!F1_selnose[12] & ((F1L3)));


--F1L41 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[16]~7 at LCCOMB_X13_Y14_N24
F1L41 = (A1L23 & (((F1L37)))) # (!A1L23 & ((F1L17 & ((F1L37))) # (!F1L17 & (F1L11))));


--F1L40 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[15]~8 at LCCOMB_X13_Y14_N18
F1L40 = (F1L17 & (A1L5)) # (!F1L17 & ((A1L23 & (A1L5)) # (!A1L23 & ((F1L9)))));


--F1L42 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[17]~9 at LCCOMB_X13_Y14_N20
F1L42 = (F1L17 & (((F1L38)))) # (!F1L17 & ((A1L23 & ((F1L38))) # (!A1L23 & (F1L13))));


--F1L43 is lpm_divide:Mod0|lpm_divide_edm:auto_generated|sign_div_unsign_9kh:divider|alt_u_div_08f:divider|StageOut[18]~10 at LCCOMB_X13_Y14_N22
F1L43 = (F1L17 & (F1L39)) # (!F1L17 & ((A1L23 & (F1L39)) # (!A1L23 & ((F1L15)))));


--A1L29 is is_multiple~0 at LCCOMB_X12_Y14_N4
A1L29 = (!F1L23 & (!F1L29 & (!F1L27 & !F1L25)));


--A1L30 is is_multiple~1 at LCCOMB_X12_Y14_N30
A1L30 = (A1L29 & (!F1L21 & !F1L19));


--A1L31 is is_multiple~2 at LCCOMB_X12_Y14_N0
A1L31 = (!F1L40 & (F1L29 & !A1L3));


--A1L32 is is_multiple~3 at LCCOMB_X12_Y14_N18
A1L32 = (A1L31 & (!F1L42 & !F1L41));


--A1L25 is Equal1~1 at LCCOMB_X12_Y14_N28
A1L25 = (A1L24 & (!A1L15 & !A1L17));


--A1L33 is is_multiple~4 at LCCOMB_X12_Y14_N22
A1L33 = (!A1L25 & ((A1L30) # ((A1L32 & !F1L43))));


--A1L34 is is_multiple~output at IOOBUF_X10_Y31_N2
A1L34 = OUTPUT_BUFFER.O(.I(A1L33), , , , , , , , , , , , , , , , , );


--is_multiple is is_multiple at PIN_A6
is_multiple = OUTPUT();


--A1L27 is invalid_inp~output at IOOBUF_X10_Y0_N9
A1L27 = OUTPUT_BUFFER.O(.I(A1L25), , , , , , , , , , , , , , , , , );


--invalid_inp is invalid_inp at PIN_N4
invalid_inp = OUTPUT();


--A1L7 is a[2]~input at IOIBUF_X14_Y0_N8
A1L7 = INPUT_BUFFER(.I(a[2]), );


--a[2] is a[2] at PIN_L5
a[2] = INPUT();


--A1L15 is b[0]~input at IOIBUF_X12_Y0_N1
A1L15 = INPUT_BUFFER(.I(b[0]), );


--b[0] is b[0] at PIN_N6
b[0] = INPUT();


--A1L21 is b[3]~input at IOIBUF_X12_Y31_N8
A1L21 = INPUT_BUFFER(.I(b[3]), );


--b[3] is b[3] at PIN_A8
b[3] = INPUT();


--A1L23 is b[4]~input at IOIBUF_X33_Y14_N8
A1L23 = INPUT_BUFFER(.I(b[4]), );


--b[4] is b[4] at PIN_H12
b[4] = INPUT();


--A1L11 is a[4]~input at IOIBUF_X14_Y31_N8
A1L11 = INPUT_BUFFER(.I(a[4]), );


--a[4] is a[4] at PIN_B6
a[4] = INPUT();


--A1L17 is b[1]~input at IOIBUF_X14_Y0_N1
A1L17 = INPUT_BUFFER(.I(b[1]), );


--b[1] is b[1] at PIN_L7
b[1] = INPUT();


--A1L9 is a[3]~input at IOIBUF_X33_Y12_N1
A1L9 = INPUT_BUFFER(.I(a[3]), );


--a[3] is a[3] at PIN_L12
a[3] = INPUT();


--A1L19 is b[2]~input at IOIBUF_X12_Y31_N1
A1L19 = INPUT_BUFFER(.I(b[2]), );


--b[2] is b[2] at PIN_A7
b[2] = INPUT();


--A1L5 is a[1]~input at IOIBUF_X33_Y14_N1
A1L5 = INPUT_BUFFER(.I(a[1]), );


--a[1] is a[1] at PIN_H10
a[1] = INPUT();


--A1L3 is a[0]~input at IOIBUF_X33_Y16_N22
A1L3 = INPUT_BUFFER(.I(a[0]), );


--a[0] is a[0] at PIN_G13
a[0] = INPUT();












